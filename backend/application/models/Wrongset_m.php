<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

class Wrongset_m extends MY_Model
{
    protected $_table_name = 'tbl_wrong_set';
    protected $_primary_key = 'id';
    protected $_primary_filter = 'intval';
    protected $_order_by = "id asc";

    function __construct()
    {
        parent::__construct();
    }

    public function getItems($site_id = 1)
    {
        $this->db->select('*, '
            . $this->_table_name . '.id as id, '
            . $this->_table_name . '.update_time as update_time, '
            . $this->_table_name . '.create_time as create_time, '
            . $this->_table_name . '.sort_num as sort_num')
            ->from($this->_table_name)
            ->join('tbl_package', $this->_table_name . '.package_id = tbl_package.id', 'inner')
            ->join('tbl_sites', $this->_table_name . '.site_id = tbl_sites.id', 'inner')
            ->where($this->_table_name . '.site_id', $site_id);
        $query = $this->db->get();
        return $query->result();
    }

    function getProblemSet($problem_ids){
        if(count($problem_ids)==0) return array();
        $this->db->select('*');
        $this->db->from($this->_table_name);
        foreach($problem_ids as $item){
            $this->db->or_where('id',$item);
        }
        $query = $this->db->get();
        return $query->result();
    }

    function getProblemSetFromPackage($problem_ids){
        if(count($problem_ids)==0) return array();
        $this->db->select('*');
        $this->db->from($this->_table_name);
        foreach($problem_ids as $item){
            $this->db->or_where('package_id',$item);
        }
        $query = $this->db->get();
        return $query->result();
    }

    function get_package()
    {
        $query = $this->db->get($this->_table_name);
        return $query->result();
    }

    function add($arr)
    {
        $this->db->insert($this->_table_name, $arr);
        return $this->db->insert_id();
    }

    function get_single_package($item_id)
    {
        $arr = array(
            $this->_primary_key => $item_id
        );
        return parent::get_single($arr);
    }

    public function get_where($array = NULL)
    {
        return parent::get_where($array); // TODO: Change the autogenerated stub
    }

    public function delete($item_id)
    {
        $this->db->where($this->_primary_key, $item_id);
        $this->db->delete($this->_table_name);
        return $this->getItems();
    }

    public function publish($item_id, $publish_st, $site_id = 1)
    {
        $this->db->set('prob_status', $publish_st);
        $this->db->where($this->_primary_key, $item_id);
        $this->db->update($this->_table_name);
        return $this->getItems();
    }

    function edit($arr, $item_id)
    {
        $this->db->set($arr);
        $this->db->where('id', $item_id);
        $this->db->update($this->_table_name);
        return $this->getItems();
    }
}
