<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

class Teacherwork_m extends MY_Model
{


    protected $_table_name = 'tbl_teacher_work';
    protected $_primary_key = 'id';
    protected $_primary_filter = 'intval';
    protected $_order_by = "id asc";

    function __construct()
    {
        parent::__construct();
    }

    public function getItems($site_id = 1)
    {
        $this->db->select('*, '
            . $this->_table_name . '.id as id')
            ->from($this->_table_name);
        $query = $this->db->get();
        return $query->result();
    }

    function get_package()
    {
        $query = $this->db->get($this->_table_name);
        return $query->result();
    }

    function get_item_answer_info($id){
        $this->db->select($this->_table_name .'.answer_info')
            ->from($this->_table_name)
            ->where($this->_table_name . '.id', $id);
        $query = $this->db->get();
        return $query->result();
    }

    function get_item_problem_info($id, $userId){
        $this->db->select($this->_table_name .'.problem_info')
            ->from($this->_table_name)
            ->where($this->_table_name . '.id', $id)
            ->where($this->_table_name . '.teacher_id', $userId);
        $query = $this->db->get();
        return $query->result();
    }
    function get_item_end_time($id, $userId){
        $this->db->select($this->_table_name .'.end_time')
            ->from($this->_table_name)
            ->where($this->_table_name . '.id', $id)
            ->where($this->_table_name . '.teacher_id', $userId);
        $query = $this->db->get();
        return $query->result();
    }

    function getProblemSetFromInfo($problemInfo)
    {
        $result = [];
        foreach ($problemInfo as $item) {
            $this->db->select('*');
            $this->db->from('tbl_problem_set')
                ->where('tbl_problem_set.id', $item);
            $query = $this->db->get();
            $temp_result = $query->result();
            array_push($result, $temp_result);
        }
        return $result;
    }

    function getCheckList($teacherid)
    {
        $this->db->select('*, ' . $this->_table_name . '.id as id');
        $this->db->from($this->_table_name)
            ->join('tbl_yekt_class', 'tbl_yekt_class.id = ' . $this->_table_name . '.class_id', 'inner')
            ->where($this->_table_name . '.teacher_id', $teacherid)
            ->order_by('end_time','desc');
        $query = $this->db->get();
        $result = $query->result();
        foreach ($result as $item) {
            $item->total_count = $this->getUserCountFromClassName($item->class_name);
            $item->solved_count = $this->getSolvedUserCountFromId($item->id);
        }
        return $result;
    }

    function getCheckListDetail($teacherid, $test_id)
    {
        $this->db->select('*, '.$this->_table_name.'.id as id');
        $this->db->from($this->_table_name)
            ->join('tbl_user', 'tbl_user.id = ' . $this->_table_name . '.student_id', 'inner')
            ->where('teacher_id', $test_id)
            ->where('answer_type !=', 0)
            ->order_by('end_time','desc');
        $query = $this->db->get();
        return $query->result();
    }

    function getUserCountFromClassName($className)
    {
        $user_data = array();
        $SQL = 'SELECT  count(*) as num
                FROM tbl_user
                WHERE user_class = \'' . $className . '\' 
                ;';
        $query = $this->db->query($SQL);
        $count = $query->row()->num;
        return $count;
    }

    function getSolvedUserCountFromId($id)
    {
        $user_data = array();
        $SQL = 'SELECT  count(*) as num
                FROM ' . $this->_table_name . '
                WHERE teacher_id = \'' . $id . '\'
                AND answer_type != \'1\';';
        $query = $this->db->query($SQL);
        $count = $query->row()->num;
        return $count;
    }

    function add($arr)
    {
        $this->db->insert($this->_table_name, $arr);
        return $this->db->insert_id();
    }

    function get_single_package($item_id)
    {
        $arr = array(
            $this->_primary_key => $item_id
        );
        return parent::get_single($arr);
    }

    public function get_where($array = NULL)
    {
        return parent::get_where($array); // TODO: Change the autogenerated stub
    }

    public function delete($item_id)
    {
        $this->db->where($this->_primary_key, $item_id);
        $this->db->delete($this->_table_name);
        return $this->getItems();
    }

    public function publish($item_id, $publish_st, $site_id = 1)
    {
        $this->db->set('prob_status', $publish_st);
        $this->db->where($this->_primary_key, $item_id);
        $this->db->update($this->_table_name);
        return $this->getItems();
    }

    function edit($arr, $item_id)
    {
        $this->db->where($this->_primary_key, $item_id);
        $this->db->update($this->_table_name, $arr);
        return $this->getItems();
    }
}
